<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://ww w.springframework.org/schema/mvc"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-4.1.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-4.1.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd">
    
    <bean id="redisManager" class="org.crazycake.shiro.RedisManager">
	    <property name="host" value="#{redis.redis_hostname}"/>
	</bean>
	<bean id="redisSessionDAO" class="org.crazycake.shiro.RedisSessionDAO">
	    <property name="redisManager" ref="redisManager" />
	</bean>
	<bean id="cacheManager" class="org.crazycake.shiro.RedisCacheManager">
	    <property name="redisManager" ref="redisManager" />
	    <property name="principalIdFieldName" value="id" />
	</bean>
    
	<!-- shiro中核心的组件 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		
		<property name="cacheManager" ref="cacheManager"></property>
		<property name="sessionMode" value="http" />
		<property name="realm" ref="userRealm"></property>
		<property name="sessionManager" ref="sessionManager"></property>
		<!-- 加入rememberMe管理 -->
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>
	
	<!-- 配置session会话管理器 -->
	<bean id="sessionManager" class="group.xuxiake.shiro.SessionConfig">
		
		<property name="sessionDAO" ref="redisSessionDAO"></property>
		<!-- 设置session过期时间为12小时(单位：毫秒)，默认为30分钟 -->
		<property name="globalSessionTimeout" value="43200000"></property>
		 <!-- 需要让此session可以使用该定时调度器进行检测 -->
		<property name="sessionValidationSchedulerEnabled" value="true"></property> 
		<!-- 所有的session一定要将id设置到Cookie之中 -->
		<property name="sessionIdCookie">
			<bean class="org.apache.shiro.web.servlet.SimpleCookie">
				<property name="name" value="JSESSID" />
			</bean>
		</property>
	</bean>
	
	<!-- 自定义的realm，进行登陆验证以及权限验证 -->
	<bean id="userRealm" class="group.xuxiake.shiro.UserRealm">
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<!-- 加密的算法 -->
				<property name="hashAlgorithmName" value="MD5"></property>
				<!--加密次数 -->
				<property name="hashIterations" value="1024"></property>
			</bean>
		</property>
	</bean>
	
	<!-- 可以自动的配置Spring容器中shiro bean 的生命周期方法 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	<!-- 自定义ShareWebPageFileter -->
	<bean id="ShiroLoginFilter" class="group.xuxiake.filter.ShiroLoginFilter"></bean>
	<bean id="VerifyUserFilter" class="group.xuxiake.filter.VerifyUserFilter"></bean>

	<!-- 配置shiroFilter，默认id要和web.xml中配置shiroFilter的name保持一致 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 配置 securityManager -->
		<property name="securityManager" ref="securityManager" />
		
		<!-- 自定义过滤器 -->
		<property name="filters">
	        <util:map>
	            <entry key="ShiroLoginFilter" value-ref="ShiroLoginFilter" />
	            <entry key="VerifyUserFilter" value-ref="VerifyUserFilter" />
	        </util:map>
	    </property>

		<!-- 配置那些页面需要保护，以及需要那些权限 -->
		<!-- anon(filter) 可以匿名访问 authc:必须认证后才可以访问(登录) logout:注销用户 -->
		<property name="filterChainDefinitions">
			<value>
				/user/logout = anon
				/user/login = anon
				/user/getInfo = anon
				/user/checkUserName = anon
				/user/checkPhone = anon
				/user/checkEmail = anon
				/user/checkImgCode = anon
				/user/register = anon
				/user/registerApp = anon
				/verify/** = anon
				/user/createImg/** = anon
				/share/** = anon
				/share/shareFile = VerifyUserFilter
				/share/findAll = VerifyUserFilter
				/share/delete/* = VerifyUserFilter
				/file/** = VerifyUserFilter
				/img/** = VerifyUserFilter
				/dir/** = VerifyUserFilter
				/recycle/** = VerifyUserFilter
				/** = ShiroLoginFilter
			</value>
		</property>
		
	</bean>
	
	<!-- 会话Cookie模板 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<!--设置js是否可以访问cookie，true不能访问 -->
		<property name="httpOnly" value="true" />
		<!-- 保存时长30天,以秒为单位 -->
		<property name="maxAge" value="2592000" />
	</bean>
	
	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- ipherKey是加密rememberMe Cookie的密钥；默认AES算法 -->
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
		<!-- 引入上面定义的cookie模板 -->
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	
</beans>
